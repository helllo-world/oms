<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.neuedu.oms.dao.TeacherClassMapper" >
  <resultMap id="BaseResultMap" type="com.neuedu.oms.entity.TeacherClass" >
    <id column="tc_id" property="tcId" jdbcType="INTEGER" />
    <result column="class_id" property="classId" jdbcType="INTEGER" />
    <result column="teacher_id" property="teacherId" jdbcType="INTEGER" />
    <result column="subject_id" property="subjectId" jdbcType="INTEGER" />
    <result column="subject_name" property="subjectName" jdbcType="VARCHAR" />
    <result column="teach_year" property="teachYear" jdbcType="INTEGER" />
    <result column="semester" property="semester" jdbcType="TINYINT" />
    <result column="comment" property="comment" jdbcType="VARCHAR" />
    <result column="reserve1" property="reserve1" jdbcType="VARCHAR" />
    <result column="reserve2" property="reserve2" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    tc_id, class_id, teacher_id, subject_id, subject_name, teach_year, semester, comment, 
    reserve1, reserve2
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.neuedu.oms.entity.TeacherClassExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from teacher_class
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from teacher_class
    where tc_id = #{tcId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from teacher_class
    where tc_id = #{tcId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.neuedu.oms.entity.TeacherClassExample" >
    delete from teacher_class
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.neuedu.oms.entity.TeacherClass" >
    insert into teacher_class (tc_id, class_id, teacher_id, 
      subject_id, subject_name, teach_year, 
      semester, comment, reserve1, 
      reserve2)
    values (#{tcId,jdbcType=INTEGER}, #{classId,jdbcType=INTEGER}, #{teacherId,jdbcType=INTEGER}, 
      #{subjectId,jdbcType=INTEGER}, #{subjectName,jdbcType=VARCHAR}, #{teachYear,jdbcType=INTEGER}, 
      #{semester,jdbcType=TINYINT}, #{comment,jdbcType=VARCHAR}, #{reserve1,jdbcType=VARCHAR}, 
      #{reserve2,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.neuedu.oms.entity.TeacherClass" >
    insert into teacher_class
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="tcId != null" >
        tc_id,
      </if>
      <if test="classId != null" >
        class_id,
      </if>
      <if test="teacherId != null" >
        teacher_id,
      </if>
      <if test="subjectId != null" >
        subject_id,
      </if>
      <if test="subjectName != null" >
        subject_name,
      </if>
      <if test="teachYear != null" >
        teach_year,
      </if>
      <if test="semester != null" >
        semester,
      </if>
      <if test="comment != null" >
        comment,
      </if>
      <if test="reserve1 != null" >
        reserve1,
      </if>
      <if test="reserve2 != null" >
        reserve2,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="tcId != null" >
        #{tcId,jdbcType=INTEGER},
      </if>
      <if test="classId != null" >
        #{classId,jdbcType=INTEGER},
      </if>
      <if test="teacherId != null" >
        #{teacherId,jdbcType=INTEGER},
      </if>
      <if test="subjectId != null" >
        #{subjectId,jdbcType=INTEGER},
      </if>
      <if test="subjectName != null" >
        #{subjectName,jdbcType=VARCHAR},
      </if>
      <if test="teachYear != null" >
        #{teachYear,jdbcType=INTEGER},
      </if>
      <if test="semester != null" >
        #{semester,jdbcType=TINYINT},
      </if>
      <if test="comment != null" >
        #{comment,jdbcType=VARCHAR},
      </if>
      <if test="reserve1 != null" >
        #{reserve1,jdbcType=VARCHAR},
      </if>
      <if test="reserve2 != null" >
        #{reserve2,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.neuedu.oms.entity.TeacherClassExample" resultType="java.lang.Integer" >
    select count(*) from teacher_class
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update teacher_class
    <set >
      <if test="record.tcId != null" >
        tc_id = #{record.tcId,jdbcType=INTEGER},
      </if>
      <if test="record.classId != null" >
        class_id = #{record.classId,jdbcType=INTEGER},
      </if>
      <if test="record.teacherId != null" >
        teacher_id = #{record.teacherId,jdbcType=INTEGER},
      </if>
      <if test="record.subjectId != null" >
        subject_id = #{record.subjectId,jdbcType=INTEGER},
      </if>
      <if test="record.subjectName != null" >
        subject_name = #{record.subjectName,jdbcType=VARCHAR},
      </if>
      <if test="record.teachYear != null" >
        teach_year = #{record.teachYear,jdbcType=INTEGER},
      </if>
      <if test="record.semester != null" >
        semester = #{record.semester,jdbcType=TINYINT},
      </if>
      <if test="record.comment != null" >
        comment = #{record.comment,jdbcType=VARCHAR},
      </if>
      <if test="record.reserve1 != null" >
        reserve1 = #{record.reserve1,jdbcType=VARCHAR},
      </if>
      <if test="record.reserve2 != null" >
        reserve2 = #{record.reserve2,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update teacher_class
    set tc_id = #{record.tcId,jdbcType=INTEGER},
      class_id = #{record.classId,jdbcType=INTEGER},
      teacher_id = #{record.teacherId,jdbcType=INTEGER},
      subject_id = #{record.subjectId,jdbcType=INTEGER},
      subject_name = #{record.subjectName,jdbcType=VARCHAR},
      teach_year = #{record.teachYear,jdbcType=INTEGER},
      semester = #{record.semester,jdbcType=TINYINT},
      comment = #{record.comment,jdbcType=VARCHAR},
      reserve1 = #{record.reserve1,jdbcType=VARCHAR},
      reserve2 = #{record.reserve2,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.neuedu.oms.entity.TeacherClass" >
    update teacher_class
    <set >
      <if test="classId != null" >
        class_id = #{classId,jdbcType=INTEGER},
      </if>
      <if test="teacherId != null" >
        teacher_id = #{teacherId,jdbcType=INTEGER},
      </if>
      <if test="subjectId != null" >
        subject_id = #{subjectId,jdbcType=INTEGER},
      </if>
      <if test="subjectName != null" >
        subject_name = #{subjectName,jdbcType=VARCHAR},
      </if>
      <if test="teachYear != null" >
        teach_year = #{teachYear,jdbcType=INTEGER},
      </if>
      <if test="semester != null" >
        semester = #{semester,jdbcType=TINYINT},
      </if>
      <if test="comment != null" >
        comment = #{comment,jdbcType=VARCHAR},
      </if>
      <if test="reserve1 != null" >
        reserve1 = #{reserve1,jdbcType=VARCHAR},
      </if>
      <if test="reserve2 != null" >
        reserve2 = #{reserve2,jdbcType=VARCHAR},
      </if>
    </set>
    where tc_id = #{tcId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.neuedu.oms.entity.TeacherClass" >
    update teacher_class
    set class_id = #{classId,jdbcType=INTEGER},
      teacher_id = #{teacherId,jdbcType=INTEGER},
      subject_id = #{subjectId,jdbcType=INTEGER},
      subject_name = #{subjectName,jdbcType=VARCHAR},
      teach_year = #{teachYear,jdbcType=INTEGER},
      semester = #{semester,jdbcType=TINYINT},
      comment = #{comment,jdbcType=VARCHAR},
      reserve1 = #{reserve1,jdbcType=VARCHAR},
      reserve2 = #{reserve2,jdbcType=VARCHAR}
    where tc_id = #{tcId,jdbcType=INTEGER}
  </update>
</mapper>